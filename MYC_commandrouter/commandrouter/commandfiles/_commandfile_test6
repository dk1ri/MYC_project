# command input file (to check commands)
# ======================================
#
# test6: check of of / af commands
#
# info lines must follow command or answer lines of the same device!
# the program will not detect the correct device otherwise!!!!!
# comments (line starting with #) are allowed
# requires same syntax as for inputs (ASCII values separated by space)
# blank lines mean no I/O, numbers > 255 will crah the programm
# there must be 7 lines for each command:
# - announceline
# - command from SK
# - output to device
# - answer from device
# - info /command to CR from LD (lines before should be empty)
# - output to SK; no string
# - output to SK; number and string mixed, string encloded by \\str\\
#
# parameters with more than one byte are not checked!!
#
# CR basic, to_sk is not fixed, depends on actual number of commands:
6001 88;m;DK1RI;Test6;V01;1;100;1;26
88
88



88 31 xxstr 88;m;DK1RI;Test6;V01;1;100;1;26 xxstr
#
6002 89;of;a;3
89 1 1 
1 1 1




#
6003 90;of;b;3,yyy
90 2 4 5
2 2 4 5




#
6004 91;of;i;3;456
# 3 * 456 pos (2 bytes); 2 * integer: 2 byte
91 0 2 1 2 1 2 
3 0 2 1 2 1 2




#
6005 92;of;w;3;1034;65789
# 3 * 1024 * 65789 pos (4 bytes); 3 * word: 2 byte
92 0 0 0 3 1 2 1 2 1 2
4 0 0 0 3 1 2 1 2 1 2




#
6006 93;of;e;3
#  pos (1 bytes); 2 * signed long: 4 byte
93 2 1 2 3 4 1 2 3 4
5 2 1 2 3 4 1 2 3 4




#
6007 94;of;L;256
# 256 pos (2 bytes); 1 * unsigned long: 4 byte
94 0 1 1 2 3 4
6 0 1 1 2 3 4




#
6008 95;of;s;66000
# 66000 pos (3 bytes); 1 * single: 4 byte
95 0 0 1 1 2 3 4
7 0 0 1 1 2 3 4




#
6009 96;of;d;3,xxx;400,yyy
# 3 * 400 pos (2 bytes); 1 * double: 8 byte
96 0 1 1 2 3 4 5 6 7 8
8 0 1 1 2 3 4 5 6 7 8




#
6010 97;of;t;270
# 270 pos (2 bytes); 2 * time: 8 byte
97 0 2 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8
9 0 2 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8




#
60011 98;of;127;2;3;4;5
# 2 * 3 * 4 * 5 pos (1 bytes); stringlength 1 Byte 5 Byte
98 1 5 1 2 3 4 5
10 1 5 1 2 3 4 5




#
6012 98;of;127;2;3;4;5
# 2 * 3 * 4 * 5 pos (1 bytes); stringlength 1 Byte 2 * 2 Byte
98 2 2 1 2 2 1 2
10 2 2 1 2 2 1 2




#
60013 99;af;a;3
# answer 1 * 1 byte
99 1
11 1
11 1 1

99 1 1

#
# info
6014 99;af;a;3
# commandtoken, number_of_elements, element


11 1 1

99 1 1

#
6015 100;af;b;3,yyy
# answer 2 *  
100 2
12 2
12 2 2 2

100 2 2 2

#
# info
6016 100;af;b;3,yyy
# 2 elements


12 2 1 1

100 2 1 1

#
6017 101;af;i;3;456
# answer 2 * 2 byte
101 0 2
13 0 2
13 0 2 1 2 1 2

101 0 2 1 2 1 2

#
# info
6018 101;af;i;3;456
# 2 elements per 2 bytes


13 0 2 1 1 0 1

101 0 2 1 1 0 1

#
6019 102;af;w;3;1034;65789
# answer 1 * 2 byte
102 0 0 0 1
14 0 0 0 1
14 0 0 0 1 1 2

102 0 0 0 1 1 2

#
# info
6020 102;af;w;3;1034;65789
# 1 element per 2 bytes


14 0 0 0 1 1 2

102 0 0 0 1 1 2

#
6021 103;af;e;3
# answer 1 * 4 byte
103 1
15 1
15 1 1 2 3 4

103 1 1 2 3 4

#
# info
6022 103;af;e;3
# 1 element per 4 byte


15 1 1 2 3 4

103 1 1 2 3 4

#
6023 104;af;L;256
# answer 2 * 4 byte
104 0 2
16 0 2
16 0 2 1 2 3 4 1 2 3 4

104 0 2 1 2 3 4 1 2 3 4

#
# info
6024 104;af;L;256
# 2 elements per 4 byte


16 0 2 1 2 3 4 1 2 3 4

104 0 2 1 2 3 4 1 2 3 4

#
6025 105;af;s;66000
# answer 1 * 4 byte
105 0 0 1
17 0 0 1
17 0 0 1 1 2 3 4

105 0 0 1 1 2 3 4

#
# info 
6026 105;af;s;66000
#1 element per 1 byte


17 0 0 1 1 2 3 4

105 0 0 1 1 2 3 4

#
6027 106;af;d;3,xxx;400,yyy
# answer 1 * 8 byte
106 0 1
18 0 1
18 0 1 1 2 3 4 5 6 7 8

106 0 1 1 2 3 4 5 6 7 8

#
# info
6028 106;af;d;3,xxx;400,yyy
# 2 elements per 8 byte


18 0 2 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8

106 0 2 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8

#
6029 107;af;t;270
# answer 2 * 8 byte
107 0 2
19 0 2
19 0 2 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8

107 0 2 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8

#
# info
6030 107;af;t;270
# 1 element per 8 byte


19 0 1 1 2 3 4 5 6 7 8

107 0 1 1 2 3 4 5 6 7 8

#
6031 108;af;127;2;3;4;5
108 1
20 1
20 1 6 1 2 3 4 5 6

108 1 6 1 2 3 4 5 6

#
# info
6032 108;af;127;2;3;4;5
# 1 element per 6 byte


20 1 6 1 2 3 4 5 6

108 1 6 1 2 3 4 5 6

#
6033 108;af;127;2;3;4;5
# 2 element per 6 / 2 byte


20 2 6 1 2 3 4 5 6 2 1 2 

108 2 6 1 2 3 4 5 6 2 1 2

#