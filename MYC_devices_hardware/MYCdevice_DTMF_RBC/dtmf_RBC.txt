DTMF Sender für Remote Shack von MFJ (TM)

Author: DK1RI
Version V01.3 20160705
This paper is published in github.com/dk1ri as well

Einleitung

Dieses Interface setzt MYC Befehle in DTMF Befehle für das MFJ Remote Shack (TM) um.
So kann ein Remote Shack in ein MYC System eingebunden werden.
Dies ist ein Beispiel für die Verwendung des DTMF Senders als Template durch einfache Ergänzungen.
Das Interface arbeitet als Slave am I2C Bus.
Das Interface kann auch bei entsprechender Bestückung der Leiterplatte Eingaben an der RS232 Schnittstelle oder USB Schnittstelle in Remote Shack Signale umsetzten.

Beschreibung

Die Eagle Daten der Leiterplatte stehen unter  [1] und [2].
Es gibt eine (ältere) Version mit 40-poligem Prozessor und eine für 28-poligen
Die Bedienung und Funktion ist identisch; die Firmware unterscheidet sich nur in der Belegung der pins.
Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 40mA max  oder über USB.

Die Daten müssen binär eingegeben werden; er erfolgt keine Wandlung, 
Die gesendeten Zeichen werden auch immer über die RS232 Schnittstelle als Ziffern und Buchstaben A - F ausgegeben.
RS232 / USB und I2C können „gleichzeitig“ verwendet werden. Allerdings wird beim jedem Wechsel der Befehlspuffer gelöscht.

Für die Programmierung stand die Befehlsliste, die mit dem RBC212-IC2 geliefert wurde, zur Verfügung.
Ich konnte nicht die Bedeutung aller Befehle herausfinden; einige sind offenbar für andere Zusatzgeräte gedacht. Die Befehle wurden zwar mit einem DTMF Empfänger getestet, aber nicht mit einem realen RBC.

Das Remote Shack liefert keine Datenrückmeldung. Bei Eingabe von Daten, die das Funkgerät nicht versteht, sind die Anzeigen an der Benutzerschnittstelle möglicherweise falsch.

Die Initialisierung dauert ca 10 Sekunden, da der RBC erst eingeschaltet wird und dann die Ansage abgewartet wird.

Befehle / Announcements

Folgende Befehle werden von der I2C  / RS232 / USB Schnittstelle akzeptiert:
Zu Details zum MYC Protokoll und zur Bedienung siehe [4]
Dies ist eine Kopie aus dem Bascom Programm:

Announce0:
'Befehl &H00
'eigenes basic announcement lesen
'basic announcement is read to I2C or output
Data "0;m;DK1RI;MFJ RBC Interface(TM);V02.1;1;160;57;66"
'
Announce1:
'Befehl &H01
'setzt FrequenzVFO A, command * VFOA  *
'set frequency
Data "1;om,set frequeny;L,{0 to 999999.9}"
'
Announce2:
'Befehl &H02
'setzt Frequenz VFO B, command * VFOB #
'set frequency
Data "2;om,set frequency;L,{0 to 999999.9}"
'
Announce3:
'Befehl &H03
'gibt frequenz aus VFO A (als Sprache),  command **
'play frequency VFOA
Data "3;ou,play frequency VFO A;0"
'
Announce4:
'Befehl &H04
'gibt frequenz aus (als Sprache),  command ##
'play frequency VFOB
Data "4;ou,play frequency VFOB;0"
'
Announce5:
'Befehl &H05   0 to 3
'Aendert Frequenz um 1 Step; command #1 1 4 8 0
'change frequency 1 step
Data"5;ou,change frequency;0,+100;1,-100;2,+500;3,-500"
'
Announce6:
'Befehl &H06    0 to 4
'startet scan,  command #1 2 3 5 6 0
'start scan
Data"6;ou,scan;0,medium up;1,fast up;2,medium down;3,fast down;4,stop"
'
Announce7:
'Befehl &H07   0 to 99
'setzt memory, command #1 7 x x
'set memory
Data "7;om,set memory;b,{0 to 99}"
'
Announce8:
'Befehl &H08   0 to 99
'recall memory, command #1 9 x x
'recall memory
Data "8;om,recall memory frequency;b,{0 to 99}"
'
Announce9:
'Befehl &H09
'Ant 1 ein, command #2 1
'Ant 1 on
Data"9;ou,Ant1;0"
'
Announce10:
'Befehl &H0A
'Ant 2 ein command #2 2
'Ant 2 on
Data "10;ou,Ant2;0"
'
Announce11:
'Befehl &H0B
'Tuner an, command #2 3
'Tuner on
Data"11;ou,Tuner in;0"
'
Announce12:
'Befehl &H0C
'Tuner aus, command #2 6
'Tuner off
Data"12;ou,Tuner off;0"
'
Announce13:
'Befehl &H0D
'Aux1 an, command #2 7
'Aux1 on
Data"13;ou,Aux1 on;0"
'
Announce14:
'Befehl &H0E
'Aux1 aus, command #2 8
'Aux1 off
Data"13;ou,Aux1 off;0"
'
Announce15:
'Befehl &H0F
'Tune Antenne command #2 9
'Tune Antennea
Data"15;ou,Tune Antenna on;0"
'
Announce16:
'Befehl &H10
'0 to 359 dreht Antenne1, command #2 4 x x x
' Rotatate Ant1
Data "16;om,rotate Antenna 1;b,{0 to 359}"
'
Announce17:
'Befehl &H11
'0 to 359 dreht Antenne2, command #2 5 x x x
'Rotatate Ant2
Data "17;om,rotate Antenna 2;b,{0 to 359}"
'
Announce18:
'Befehl &H12
'stoppt Rotor, command #2 0
'stops rotation
Data"18;ou,stop ratation;0"
'
Announce19:
'Befehl &H13   0,1
'Abschwächer, command #3 1  or #3 0 1
'Attenuator
Data"19;oa,Attenuator;a"
'
Announce20:
'Befehl &H14   0,1
'Vorverstärker, command #3 2 Or #3 0 2
'Preamp
Data"20;oa,Preamp;a"
'
Announce21:
'Befehl &H15   0,1
'Noiseblanker,command #3 3 Or #3 0 3
'Noiseblanker
Data"21;oa,Noise blanker;a"
'
Announce22:
'Befehl &H16   0,1
'Rauschunterdrückung, command #3 4 Or #3 0 4
'Noise reduction
Data"22;oa,Noise reduction;a"
'
Announce23:
'Befehl &H17   0,1
'Auto Notch #3 5 Or #3 0 5
'Auto notch
Data"23;oa,Auto Notch;a"
'
Announce24:
'Befehl &H18   0 to 2
'setzt filter, command #3 7.. 8... 9
'set filter
Data"24;os,Filter;0,narrow;1,medium;2,wide"
'
Announce25:
'Befehl &H19
'alle Function aus, command #3 0 0
'all functions off
Data"25;ou,all filter functions off;0"
'
Announce26:
'Befehl &H1A   0 to 4
'setzt Betriebsart, command #3 6 1, 2, 3, 4, 5
'set mode
Data"26;os,Mode;0,LSB;1,USB;2,AM;3,CW;4,FM"
'
Announce27:
'Befehl &H1B   0,1
'Sprachkompressor, command #4 2 Or #4 0 2
'speech compressor
Data"27;oa,spech compressor;a"
'
Announce28:
'Befehl &H1C   0,1
'VOX, command #4 3 Or #4 0 3
'VOX
Data"28;oa,VOX;a"
'
Announce29:
'Befehl &H1D   0,1
'Tone, command #4 4 Or #4 0 4
'Tone
Data"29;oa,Tone;a"
'
Announce30:
'Befehl &H1E   0,1
'split, command #4 5 Or #4 0 5
'split
Data"30;oa,split;a"
'
Announce31:
'Befehl &H1F   0,1
'Vertärker #4 6 Or #4 0 6
'Amplifier
Data"31;oa,Amplifier;a"
'
Announce32:
'Befehl &H20
'alle Sendefunctionen aus, command #4 0 0
'all tx functions off
Data"32;ou,all TX functions off;0"
'
Announce33:
'Befehl  &H21  0 to 9999
'setzt tone Frequenz, command #4 7 x x x x
'set tone frequency
Data "33;op,tone frequency;1000,{0 to 999,9};lin;Hz"
'
Announce34:
'Befehl &H22   0 to 2
'setzt shift,command #4 8 x
'set shift
Data"34;os,Shift;0,simplex;1,+;2,-"
'
Announce35:
'Befehl &H23      0 to 3
'Ausgangsleistung, command #4 9 x
'set power
Data"35;os,power;0,25%;1,50%;2,75%;3,100%"
'
Announce36:
'Befehl &H24   0,1
'AUX2 an au, command #6 2 0 Or #6 2 1
'AUX2 on off
Data"36;oa,AUX2;a"
'
Announce37:
'Befehl &H25   0,1         #
'AUX3 an au, command #6 3 0 Or #6 3 1
'AUX3 on off
Data"37;oa,AUX3;a"
'
Announce38:
'Befehl &H26   0,1
'AUX4 an au, command #6 4 0 Or #6 4 1
'AUX4 on off
Data"38;oa,AUX4;a"
'
Announce39:
'Befehl &H27   0,1
'AUX5 an au, command #6 5 0 Or #6 5 1
'AUX5 on off
Data"39;oa,AUX5;a"
'
Announce40:
'Befehl &H28   0,1
'AUX6 an au, command #6 6 0 Or #6 6 1
'AUX6 on off
Data"40;oa,AUX6;a"
'
Announce41:
'Befehl &H29   0,1
'AUX7 an au, command #6 7 0 Or #6 7 1
'AUX7 on off
Data"41;oa,AUX7;a"
'
Announce42:
'Befehl &H2A   0,1
'AUX8 an au, command #6 8 0 Or #6 8 1
'AUX8 on off
Data"42;oa,AUX8;a"
'
Announce43:
'Befehl &H2B   0,1
'AUX9 an au, command #6 9 0 Or #6 9 1
'AUX9 on off
Data"43;oa,AUX9;a"
'
Announce44:
'Befehl &H2C
'reset, command #5 5
'reset
Data"44;ou,reset;0"
'
Announce45:
'Befehl &H2D
'Sprachlautstärke auf, command #5 8
'voice volume up
Data"45;ou,voice volume up;0"
'
Announce46:
'Befehl &H2E
'Sprachlautstärke ab, command #5 0
'voice volume down
Data"46;ou,voice volume down;0"
'
Announce47:
'Befehl &H2F   0 to 9
'Zahl der Ruftone, command#5 7 x
'number of ring
Data"47;om,number of ring;b,{0 to 9}"
'
Announce48:
'Befehl &H30   0 to 9999
'passwort festlegen, command #5 4 x x x x
'set password
Data"48;om,set password;L,{0 to 9999}"
'
Announce49:
'Befehl &H31   0 to 255
'DTMF Länge
'DTMF length
Data "49;oa,DTMF Duration;b"
'
Announce50:
'Befehl &H32   0 to 255
'DTMF Länge lesen
'read DTMF length
Data "50;aa,as49"

Announce51:
'schreiben DTMF Pausezeit
'write DTMF wait
Data "51;oa,DTMF wait;b"
'
Announce52:
'Befehl &H34   0 to 255
'DTMF Pausezeit lesen
'read DTMF wait
Data "52;aa,as51"
'
Announce53:
'Befehl &H35
'Sende ein, command #4 1
'transmit
Data"53;ou,transmit;0"
'
Announce54:
'Befehl &H36
'Spielt Ch1 beim Senden, command #4 1
'play Ch1
Data"54;ou,play Ch1;0"
'
Announce55:
'Befehl &H37
'Start, command *
' start
Data"55;ou,start;0"
'
Announce56:
'Befehl &H38   0 to 9999
'passwort eingeben, command x x x x
'password
Data"56;om,password;L,{0 to 9999}"
'
Announce57:
'Befehl &HEA
'DTMF Länge schreiben
'write DTMF length
Data "234;oa,DTMF Duration;b"
'
Announce58:
'Befehl &HEB
'Dtmf duration lesen
'read DTMF Länge
Data "235;aa,as234"
'
Announce59:
'Befehl &HEC
'Dtmf Pause schreiben
'write DTMF Pause
Data "236;oa,DTMF Pause;b"
'
Announce60:
'Befehl &HED
'Dtmf Pause lesen
'read DTMF Pause
Data "237;aa,as236"
'
Announce61:
'Befehl &HF0<n><m>
'liest announcements
'read n announcement lines
Data "240;an,ANNOUNCEMENTS;160;66"
'
Announce62:                                                  '
'Befehl &HFC
'Liest letzten Fehler
'read last error
Data "252;aa,LAST ERROR;20,last_error"
'
Announce63:                                                  '
'Befehl &HFD
'Geraet aktiv Antwort
'Life signal
Data "253;aa,MYC INFO;b,ACTIVE"
'
Announce64:
'Befehl &HFE :
'eigene Individualisierung schreiben
'write individualization
Data "254;oa,INDIVIDUALIZATION;20,NAME,Device 1;b,NUMBER,1;a,I2C,1;b,ADRESS,14,{0 to 127};a,RS232,1;a,USB,1;a,RADIO,1"
'
Announce65:
'Befehl &HFF :
'eigene Individualisierung lesen
'read individualization
Data "255;aa,INDIVIDUALIZATION;20,NAME,Device 1;b,NUMBER,1;a,I2C,1;b,ADRESS,14,{0 to 127};a,RS232,1;b,BAUDRATE,0,{19200};3,NUMBER_OF_BITS,8n1;a,USB,1;a,RADIO,1""

I2C

Die Default Adresse ist 14.
Mit dem Befehl &HFE03<n> kann die Adresse in n (1 … 128) geändert werden.
Pullup Widerstände für den I2C Bus (R1/R2) können bei Bedarf bestückt werden. Der Gesamtwiderstand am Bus sollte zwischen 1 und 10 kOhm liegen. 
Wenn Geräte am I2C Bus nur 3.3V Vertragen (zB der Raspberry), muss dieses Interface auch mit 3.3V versorgt werden oder die Pullup Widerstände dürfen nicht bestückt werden.

Fehlermeldungen

Der Befehl &HFC liefert den letzten Fehler im Format:
aktuelle Befehlsnummer - Fehler - Befehlsnummer beim Auftritt des Fehlers
Dazu werden die empfangenen Befehle von 0 bis 255 umlaufend gezählt.

Reset

Ist der Reset Jumper JP4 beim Anlegen der Versorgungsspannung überbrückt, werden wieder die Defaultwerte eingelesen. Dies ist hilfreich, wenn die aktuelle I2C Adresse verloren gegangen ist.

Watchdog

Die Befehlseingabe muss in weniger als 1 Sekunde beendet sein. Danach werden die bereits empfangenen Daten gelöscht. Dies soll falsche Eingaben vermeiden.  Mit dem "letzten Fehler" Befehl kann man Eingabefehler sehen. Er zeigt die aktuelle Befehlsnummer und die des Fehlers.

Software

Die Steuerung übernimmt ein AVR Mikrocontroller Atmega16 oder grösser. Es gibt je eine Firmware für 28poligen und 40poligen Prozessor.
Die Software wurde in BASCOM geschrieben [2]

Programmierung des Prozessors

Zur Programmierung des Prozessors ist ein 6poliger ISP Stecker vorhanden.
Um der Prozessor von der Stromversorgung der übrigen Schaltung zu trennen, muss der Jumper JP1 entfernt werden.
Die Fuses müssen möglicherweise programmiert werden (sh Bascom Programm) !! Prozessortyp  mß ggf angepasst werden.

DTMF Ausgang

Der DTMF Ausgang des Prozessors kann direkt herausgeführt werden (R7 =0 Ohm, C12 entfällt)  oder über einen Tiefpass (330Ohm/330nF). Das Ausgangssignal ist ein Rechtecksignal und auch nach der Filterung nicht gleichspannungsfrei. Der Pegel im Ruhezustand ist unbestimmt. Ein Koppelkondensator und eine Anpassung des Pegels an den Empfänger wird daher empfohlen.
Mit Tiefpass ergibt sich ein recht brauchbares Signal, allerdings ist der Pegel für den DTMF Empänger noch zu hoch.

RS232 Schnittstelle

Schnittstellenparameter: 19k2 8N1
Es muss bei Jumper JP6 und JP7 (JP7 und JP8 ) ist jeweils Pin1 und Pin2  überbrückt werden.

USB Schnittstelle

Das Interface kann auch mit der USB Platine UM2102 von ELV bestückt werden. Die USB Platine wird plan auf der Oberseite der Interfaces verlötet: der USB Stecker zeigt seitlich nach außen. Die mittleren 4 pins des Verbinders ST2  sind mit dem 4 poligen Verbinder JP9 (4 /2 poligen Verbinder JP9 JP11 ) auf dem Interface zu verbinden.USB Platine und Interface müssen voneinander isoliert werden.
Die Stromversorgung erfolgt dann über USB.

SMD

Die Leiterplatte ist teilweise mit SMD bestückt. Bei den nötigen Bauteilen sind das aber nur zwei relativ großen Kondensatoren (1206).

Stromversorgung

Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 70mA max. Bei Verwendung des USB Moduls erfolgt die Stromversorgung darüber.

Bestückung der Leiterplatte

Da die Leiterplatte auch für andere Anwendungen eingesetzt werden kann, brauchen nur folgende Bauteile  bestückt werden (40poliger Prozessor):
IC1 (ATMEGA16 oder grösser), Q1(10MHz), C7 – C10, JP1 (muss für Normalbetrieb überbrückt werden), SL4

Tiefpass:
R15, C12

Verwendung von ISP:
JP5

nur mit RS232 Schnittstelle:
IC2, IC3, D1, C1 - C6, JP6, JP7 (jeweils Pin1 und Pin 2 überbrücken), X1, X4 (Buchse)

nur mit USB
UM2102
nur I2C
R1, R2 nach Bedarf, X1, X2, X3, IC3, D1, C1, C2

Weitere Bestückung erleichtert Tests..

Anschlüsse

Power
Tip	12V
Ring	GND

RS232 (Buchse)
5	GND
2	Jumper
3	Jumper

I2C Stereo (2 x 3,5mm Klinke)
Sleeve	GND
Ring	SDA
Tip	SCL

DTMF (LP SL6)
1	DTMF 
5	GND

Versionen

Diese Beschreibung gilt für die
Leiterplattenversion V02.0  (ATMega 168 oder groesser) Die Leiterplattenversion 2.3 (40 poliger Prozessor) ist auch möglich.
Bascom Version 02.1

Copyright

Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Geafahr; es wird keinerlei Garantie übernommen.
The ideas of this document can be used under GPL (Gnu Public License V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Referenzen
[[1]	i2c_rs232_interface_eagle.zip
[2]	dtmf_rbc_bascom.zip
[3]	MYC.pdf

