Hinweis für die Textformat-Version; um diese Version im PDF Format zu lesen, laden Sie bitte http://www.dk1ri.de/dhw/textdisplay.pdf

MYC Textdisplay
					

Author DK1RI, Version V03.1, 20200421
This project can be found in https://www.github.com/dk1ri

Einleitung

Dieses Gerät kann in einem MYC System verwendet werden, aber auch unabhängig davon mit (binären) Befehlen gesteuert werden. Die Befehle sind im Kapitel „Einbindung in das MYC System“ beschrieben.
Das Interface arbeitet als Slave am I2C Bus  oder kann über RS232 /USB gesteuert werden.
Defaultmäßig sind alle Schnittstellen aktiv. Mit dem Initialisierungsbefehl können diese aber deaktiviert werden. Der Initialisierungsbefehl funktioniert aber immer. 
Dieses Gerät kann zwei Typen von LCD Modulen steuern, die in meiner Bastelkiste lagen:
LM016XML (32 Zeichen zweireihig) und TLC501-30 (40 Zeichen, zweireihig)
Diese Module sind mindestens 20 Jahre alt, aber ähnliche Displays mit HD44780 kompatibler Ansteuerung und identischer Pinbelegung sind auch heute noch erhältlich.

Beschreibung und Bedienung

Die Eagle Daten für die Leiterplatte stehen unter  [1].
Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 20mA max.
Die Steuerung kann über I2C, USB oder RS232 erfolgen.

Es können LCD Module mit HD44780 kompatiblen Chips mit der Standard Pinbelegung direkt angeschlossen werden. 
Es können Displays mit einer Länge von 32  oder 40 Zeichen angeschlossen werden. Die Konfiguration erfolgt vor dem Einsatz in einem MYC System mit dem Befehl &HFE05000 (36 Zeichen) oder &HFE0501 (40 Zeichen).
Der Text wird umlaufend eingelesen; möglicherweise wird vorhandener Text überschrieben.
Der Befehl &H01 erwartet einen String mit Stringlänge, der an die aktuelle Position geschrieben wird. Der Befehl &H02 schreibt an die Position n (2. Byte) m (3.Byte) Zeichen; also zB &H0205026162 .Die Befehle &H04 und &H05 entsprechend für 40 Zeichen Displays.
Falls das Display nichts anzeigt, muss möglicherweise die Kontrasteinstellung verändert werden. Die nötige Einstellung variiert stark in Abhängigkeit mit dem verwendeten Display.

Einbindung in das MYC System

Details zum MYC System stehen in [3].
Folgende Befehle werden akzeptiert:

Announce:
'Befehl &H00
'eigenes basic announcement lesen
'basic announcement is read to I2C buffer or output
Data "0;m;DK1RI;Textdisplay;V03.2;1;230;1;17;1-1"
'
'Announce1:
'Befehl &H01
'LCD schreiben
'write LCD
Data "1;oa,write text;32"
'
'Announce2:
'Befehl &H02
'an position schreiben
'goto position and write
Data "2;om,write to position;32;32"
'
'Announce3:
'Befehl  &H03
'gehe zu Cursorposition
' go to Cursorposition
Data "3;op,Cursorposition;32;lin;-"
'
'Announce4:
'Befehl &H04
'LCD schreiben
'write LCD
Data "4;oa,write text;40"
'
'Announce5:
'Befehl &H05
'an position schreiben
'goto position and write
Data "5;om,write to position;40;40"
'
'Announce6:
'Befehl  &H06
'gehe zu Cursorposition
'go to Cursorposition
Data "6;op,Cursorposition;40;lin;-"
'
'Announce7:
'Befehl &H07
'Anzeige lÃ¶schen
'clear screen
Data "7;ou,CLS;0,CLS"
'
'Announce8:
'Befehl &H08
'Kontrast schreiben
'write Contrast
Data "8;oa,contrast;b"
'
'Announce9:
'Befehl &H09
'Kontrast lesen
'read Contrast
Data "9;oa,contrast;b"
'
'Announce10:
'Befehl &HF0<n><m>
'lieIgnorest announcements
'read n announcement lines
Data "240;ln,ANNOUNCEMENTS;230;17"
'
'Announce11:                                                  '
'Befehl &HFC
'Liest letzten Fehler
'read last error
Data "252;aa,LAST ERROR;20,last_error"
'
'Announce12:                                                  '
'Befehl &HFD
'Geraet aktiv Antwort
'Life signal
Data "253;aa,MYC INFO;b,ACTIVE"
'
'Announce13:
'Befehl &HFE :
'eigene Individualisierung schreiben
'write individualization
Data "254;ka,INDIVIDUALIZATION;20,NAME,Device 1;b,NUMBER,1;a,I2C,1;b,ADRESS,8,{0 to 127};a,SERIAL,1;a,DISPLAYSIZE,0,{16x2,20x2}"
'
'Announce14:
'Befehl &HFF :
'eigene Individualisierung lesen
'read individualization
Data "255;la,INDIVIDUALIZATION;20,NAME,Device 1;b,NUMBER,1;a,I2C,1;b,ADRESS,8,{0 to 127};a,SERIAL,1;b,BAUDRATE,0,{19200};3,NUMBER_OF_BITS,8n1;a,DISPLAYSIZE,0,{16x2,20x2}"
'
'Announce15:
Data "R !($1 $2 $3) IF $255&5 = 1"
'
'Announce16:
Data "R !($4 $5 $6) IF $255&5 = 0"
'

Fehlermeldungen

Der Befehl &HFC liefert den letzten Fehler im Format:
aktuelle Befehlsnummer - Fehler - Befehlsnummer beim Auftritt des Fehlers
Dazu werden die empfangenen Befehle von 0 bis 255 umlaufend gezählt.
Nach 254 korrekten Befehlen wird der Fehlereintrag gelöscht.

Reset

Ist der Reset Jumper JP5 beim Anlegen der Versorgungsspannung überbrückt, werden wieder die Defaultwerte eingelesen. Dies ist hilfreich, wenn die aktuelle I2C Adresse verloren gegangen ist.

Watchdog

Es gibt einen kompletten Hardware-reset, wenn die Hauptschleife länger als 2 Sekunde dauert.
Zusätzlich gibt es drei weitere Watchdogs, die in der vorliegenden Firmware für Tests und „nicht_MYC Betrieb“ nach ca 10 Sekunden ansprechen. Für „MYC Betrieb“ sollte der Wert auf 1 Sekunde gesetzt werden.
Die Befehlseingabe und Ausführung muss in dieser Zeit beendet sein. Danach werden die bereits empfangenen Daten gelöscht. Dies soll falsche Eingaben vermeiden. Mit dem &HFC "letzten Fehler" Befehl kann man Eingabefehler sehen.
Bei einem I2C Lesebefehl müssen die Daten innerhalb dieser Zeit vom I2C Master abgeholt werden. Danach werden die Daten gelöscht. Neue Befehle können erst eingegeben werden, wenn alle  Daten abgeholt wurden oder die Watchdog Zeit abgelaufen ist. Wird die RS232 / USB Schnittstelle verwendet, werden die Daten sofort ausgegeben.
Bei einem I2C BusLock (SDA pin auf 0) erfolgt auch ein I2C reset.

Software

Die Steuerung übernimmt ein AVR Mikrocontroller Atmega168 oder größer.
Das aktuelle Bascom Programm verwendet einen Atmega328.
Die Software wurde in BASCOM geschrieben [2]
Um das Programm zu kompilieren, muss das Verzeichnis common_1.10 [6] in das Verzeichnis mit dem Programm kopiert werden.

Programmierung des Prozessors

Zur Programmierung des Prozessors ist ein 6poliger ISP Stecker JP6 vorgesehen.
Die Fuses müssen möglicherweise programmiert werden (siehe Bascom Programm) !! Prozessortyp und Frequenz müssen gegebenenfalls angepasst werden.
Der Jumper J1 sollte während der Programmierung entfernt werden.

Serielle (RS232 / USB) Schnittstelle

Schnittstellenparameter: 19k2 8N1
Alternativ zur RS232 Schnittstelle kann die USB Platine UM2102 von ELV verwendet werden. Die USB Platine wird plan auf der Oberseite der Interfaces verlötet: der USB Stecker zeigt zum Rand. Die mittleren 4 pins des Verbinders ST2  sind mit dem 4 Anschlusspunkten JP7 auf dem Interface zu verbinden. USB Platine und Interface müssen voneinander isoliert werden.
Die Stromversorgung erfolgt dann über USB.

I2C Schnittstelle 

Die Default Adresse ist 8 / 16.
Mit dem Befehl &HFE03<n> kann die Adresse in n (1 … 127) geändert werden.
Pullup Widerstände R3 / R4 müssen immer bestückt werden (1k - 10k).
Mit JP2 kann festgelegt werden, ob der I2C Bus mit 3V oder 5V betrieben wird.
Bei anderer I2C Spannung als 3V kann R5 / R6 angepasst werden.
Wenn auf den 3V Betrieb völlig verzichtet werden soll, kann IC3 (PCA9517), R1, R2, R5, R6, JP2 entfallen und alternativ wird JP3 und JP4 bestückt. 
Ganz ohne I2C kann auch SL1, SL2, JP3, JP4 entfallen. 
Der Gesamtwiderstand am I2C Bus sollte bei 1 bis 10 kOhm je nach Leitungslänge liegen
Mit IC3 muss R1 / R2 (<=10k) bestückt werden.  Wenn auf IC3 verzichtet wird und JP3 / JP4 verwendet wird,, muss berücksichtigt werden, dass R1 / R2 parallel zu R3 / R4 liegt. R1 / R2 kann also gegebenenfalls entfallen. 
SL1 und SL2 sind parallel geschaltet. Ein Anschluss kann zur Weitergabe des I2C Signals an das nächste Gerät verwendet werden. 
Um Buslocks zu vermeiden, wird circa alle 200ms geprüft, ob das SDA Signal auf „0“ liegt.
Ist das 50 mal hintereinander der Fall, wird die I2C Schnittstelle neu gestartet.

SMD

Die Leiterplatte ist teilweise mit SMD bestückt. 

Stromversorgung

Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 20mA max. 
Alternativ erfolgt die Stromversorgung über USB

Bestückung der Leiterplatte 

Verwendung von ISP:
JP6

Mit I2C:
Siehe I2C oben.

Mit serieller Schnittstelle:
Bei Verwendung der RS232 Schnittstelle wird IC2, IC4 und C6 – C9 bestückt. Alternativ dazu kann der USB Modul UM2102  verwendet werden. Dann darf IC2 nicht bestückt werden! X1, D1 und C1 braucht auch nicht bestückt werden.

Der Steckverbinder zur LCD Anzeige besteht aus 2 (anreihbaren) Buchsenleisten; können aber auch als eine Leiste realisiert werden.

Q2 und R8 brauchen nicht bestückt werden, da die Helligkeitssteuerung nicht unterstützt wird.

Anschlüsse

Power
Tip	12V
Ring	GND

RS232 (Buchse)
5	GND
2	TX (PC Eingang)
3	RX (PC Ausgang)

I2C
1	GND
2	SCL
3	SDA

LCD
Das Modul LM016XML hat eine Stiftleiste. Eine Buchsenleiste wird auf der Bestückungsseite der Platine  gelötet; das Modul wird direkt darauf gesteckt. Das  LM016XML Modul befindet sich dann direkt über der Interfaceplatine. Pin 1 ist neben dem Quarz. Wird die das Interface mit der 12V Buchse bestückt, sind übliche Buchsenleisten zu niedrig. Es gibt mehrere Lösungen: Getrennter Aufbau von Interface und Modul und Verbindung mit Flachbandkabel; Übereinander stecken einer zweiten Buchsenleiste oder Anbringen der Buchsenleiste auf der Lötseite. Mein  LM016XML Modul würde dann „nach außen“ zeigen.
Natürlich kann man auch den 12V Anschluss getrennt oder auf der Lötseite anbringen..

Das TLC501-30  hat Lötanschlüsse.
Beide Module haben keine Beleuchtung. Die Helligkeitssteuerung wird nicht unterstützt.

LCD Pinbelegung	
				
1	GND
2	5V
3	Kontrast
4	Command/Data, Register Select
5	read / write
6	Enable
7	DB0
8	DB1
9	DB2
10	DB3
11	DB4
12	DB5
13	DB6
14	DB7
15	+ Beleuchtung regelbar, aber ohne Strombegrenzung!!
16	Beleuchtung GND

Pin 7 - 10 werden nicht benötigt.

Jumper

JP1 		Power
JP2 		I2C: 3V/5V Umschaltung
JP3		SDA Überbrückung (ohne IC3)
JP4		SCL Überbrückung (ohne IC3)
JP5		Reset
JP6		pin1 – 6: ISP, pin10 : SS für den SPI Anschluss 
JP7		Anschluss für USB Modul

Versionen

Diese Beschreibung gilt für die
Leiterplattenversion V03.0
Bascom Version V03.3

Copyright

Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Geafahr; es wird keinerlei Garantie übernommen.
The ideas of this document can be used under GPL (Gnu Public License V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Referenzen

[1]	http://www.dk1ri.de/dhw/textdisplay_eagle.zip
[2]	http://www.dk1ri.de/dhw/textdisplay_bascom.zip
[3]	https://www.dk1ri.de/myc/MYC.pdf 
[4]	https://dk1ri.de/myc/Description.txt  oder https://dk1ri.de/myc/Description.pdf (englisch)
[5]	https://dk1ri.de/myc/Definitions .txt  oder https://dk1ri.de/myc/Definitions .pdf (englisch)
[6]	https://dk1ri.de/myc/common_1.10.zip
