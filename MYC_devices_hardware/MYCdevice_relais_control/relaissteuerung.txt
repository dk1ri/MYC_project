Relaissteuerung

Author DK1RI, Version V04.2, 20180118
This project can be found in https://www.github.com/dk1ri also.

Einleitung

Die Rechnersteuerung erfolgt über I2C Bus mit MYC Protokoll

Beschreibung

Die Eagledaten stehen bei [1].
Als Stromversorgung (7-12V) werden  maximal 150mA benötigt 
Die Steuerung macht ein AVR Mikrocontroller.

Diese Leiterplatte hat vier Relais mit je zwei Umschaltkontakten, 7 digitale Eingänge und 4 Eingänge, die sich jeweils analog (1024 Stufen Auflösung) oder digital auslesen lasen.Beim Analogbetrieb liegt die Eingangsspannung zwischen 0  und  5V (nicht isoliert und nicht geschützt mit pullup Widerständen). Der Eingangsspannungsbereich ist auf 0 - 1,1V umschaltbar. Der  Eingangsspannungsbereich gilt für alle Eingänge, da die Referenzspannung umgeschaltet wird.
Der Eingangsspannungsbereich wird im EERAM gespeichert.
Die Kondensatoren an den Eingängen müssen an die Verwendung angepasst werden. Hohe Werte begrenzen möglicherweise den Frequenzbereich.

Die Relaisausgänge sind nicht für das Schalten hoher Spannungen (> 60V) geeignet, da der Abstand zum Groundfläche sehr klein ist!!!

Befehle

Zu Details zum MYC Protokoll und zur Bedienung siehe [3] und [4] (aktuell).
Folgende Befehle werden von der I2C  / RS232 / USB Schnittstelle akzeptiert; dies ist eine Kopie aus dem Bascom Programm:

Announce0:
'Befehl &H00
'basic annoumement wird gelesen
'basic announcement is read
Data "0;m;DK1RI; 4 Relais Bord;V04.0;1;100;1;32;1-1"
'
Announce1:
'Befehl &H01
'liest digital Wert INP1
'read digital INP1
Data"1;as,INP1;1;0,0;1,1"
'
Announce2:
'Befehl &H02
'liest digital Wert INP2
'read digital INP2
Data"2;as,INP2;1;0,0;1,1"
'
Announce3:
'Befehl &H03
'liest digital Wert INP3
'read digital INP3
Data"3;as,INP3;1;0,0;1,1"
'
Announce4:
'Befehl &H04
'liest digital Wert INP4
'read digital INP4
Data "4;as,INP4;1;0,0;1,1"
'
Announce5:
'Befehl &H05
'liest digital Wert INP5
'read digital INP5
Data"5;as,INP5;1;0,0;1,1"
'
Announce6:
'Befehl &H06
'liest digital Wert INP6
'read digital INP6
Data "6;as,INP6;1;0,0;1,1"
'
Announce7:
'Befehl &H07
'liest digital Wert INP7
'read digital INP7
Data"7;as,INP7;1;0,0;1,1"
'
Announce8:
'Befehl &H08
'liest analog Wert INP8
'read analog INP8
Data "8;ap,INP8;1;1024;lin;-"
'
Announce9:
'Befehl &H09
'liest digital Wert INP8
'read digital INP8
Data "9;as,INP8;1;0,0;1,1"
'
Announce10:
'Befehl &H0A
'liest analog Wert IN9
'read analog INP9
Data "10;ap,INP9;1;1024;lin;-"
'
Announce11:
'Befehl &H0B
'liest digital Wert INP9
'read digital INP9
Data "11;as,INP9;1;0,0;1,1"
'
Announce12:
'Befehl &H0C
'liest analog Wert IN10
'read analog INP10
Data"12;ap,INP10;1;1024;lin;-"
'
Announce13:
'Befehl &H0D
'liest digital Wert INP10
'read digital INP10
Data "13;as,INP10;1;0,0;1,1"
'
Announce14:
'Befehl &H0E
'liest analog Wert IN11
'read analog INP11
Data"14;ap,INP11;1;1024;lin;-"
'
Announce15:
'Befehl &H0F
'liest digital Wert INP11
'read digital INP11
Data "15;as,INP11;1;0,0;1,1"
'
Announce16:
'Befehl &H10
'liest digital alle
'read digital all
Data"16;am,all;w,{0 to 4095}"

Announce17:
'Befehl &H11
'schaltet Relais1
'switch relais1
Data "17;os,relais1;1;0,off;1,on"
'
Announce18:
'Befehl &H12
'liest Status Relais1
'read state relais1
Data "18;as;as17"
'
Announce19:
'Befehl &H13
'schaltet Relais2
'switch relais2
Data "19;os,relais2;1;0,off;1,on"
'
Announce20:
'Befehl &H14
'liest Status Relais2
'read state relais2
Data "20;as;as19"
'
Announce21:
'Befehl &H15
'schaltet Relais3
'switch relais3
Data "21;os,relais3;1;0,off;1,on"
'
Announce22:
'Befehl &H16
'liest Status Relais3
'read state relais3
Data "22;as;as21"
'
Announce23:
'Befehl &H17
'schaltet Relais4
'switch relais4
Data "23;os, relais4;1;0,off;1,on"
'
Announce24:
'Befehl &H18
'liest Status Relais4
'read state relais4
Data "24;as;as23"
'
Announce25:
'Befehl &HEE
'schreibt Referenz default: 0:5V 1: 1.1V
'write reference voltage
Data "238;oa;a"
'
Announce26:
'Befehl &HEF
'liest Referenz default: 0:5V 1: 1.1V
'read reference voltage
Data "239;aa;as238"
'
Announce27:
'Befehl &HF0
'announcement aller Befehle lesen
'read announcement lines
Data "240;ln,ANNOUNCEMENTS;100;32"
'
Announce28:
'Befehl &HFC
'Liest letzten Fehler
'read last error
Data "252;aa,LAST ERROR;20,last_error"
'
Announce29:
'Befehl &HFD
'Geraet aktiv antwort
'Life signal
Data "253;aa,MYC INFO;b,ACTIVE"
'
Announce30:
'Befehl &HFE :
'eigene Individualisierung schreiben
'write individualization
Data "254;ka,INDIVIDUALIZATION;20,NAME,Device 1;b,NUMBER,1;a,I2C,1;b,ADRESS,4,{0 to 127}"
'
Announce31:
'Befehl &HFF :
'eigene Individualisierung lesen
'read individualization
Data "255;la,INDIVIDUALIZATION;20,NAME,Device 1;b,NUMBER,1;a,I2C,1;b,ADRESS,4,{0 to 127}"
'

I2C

Die Default Adresse ist 4 .
Mit dem Befehl &HFE03<n> kann die Adresse in n (1 … 127) geändert werden.
Pullup Widerstände für den I2C Bus (R1/R2) können bei Bedarf bestückt werden. Der Gesamtwiderstand am Bus sollte zwischen 1 und 10 kOhm liegen. 
Wenn Geräte am I2C Bus nur 3.3V vertragen (zB der Raspberry), muss dieses Interface auch mit 3.3V (78L03 statt 78L05) versorgt werden (Quarzfrequenz <= 10MHz!)

Fehlermeldungen

Der Befehl &HFC liefert den letzten Fehler im Format:
aktuelle Befehlsnummer - Fehler - Befehlsnummer beim Auftritt des Fehlers
Dazu werden die empfangenen Befehle von 0 bis 255 umlaufend gezählt.

Reset

Ist der Reset Jumper JP1 beim Anlegen der Versorgungsspannung überbrückt, werden wieder die Defaultwerte eingelesen. Dies ist hilfreich, wenn die aktuelle I2C Adresse verloren gegangen ist.


Watchdog

Die Befehlseingabe und Ausführung muss in weniger als 1 Sekunde beendet sein. Danach werden die bereits empfangenen Daten gelöscht. Dies soll falsche Eingaben vermeiden. Mit dem &HFC "letzten Fehler" Befehl kann man Eingabefehler sehen.
Bei einem Lesebefehl müssen die Daten innerhalb von 10 Sekunden vom I2C Master abgeholt werden – wenn die I2C Schnittstelle gerade verwendet wird. Danach werden die Daten gelöscht. Diese Zeit kann mit dem Wert Tx_factor im Bascom Programm geändert werden. Neue Befehle können erst eingegeben werden, wenn alle  Daten abgeholt wurden. Wird die RS232 / USB Schnittstelle verwendet, werden die Daten sofort ausgegeben.
Es gibt einen kompletten Reset, wenn die Hauptschleife länger als 2 Sekunde dauert, zum Beispiel, wenn die I2C Schnittstelle nicht korrekt arbeitet.

Software

Die Steuerung übernimmt ein AVR Mikrocontroller ATMEGA8 oder größer.
Das Interface erfolgt über I2C Bus mit MYC Protokoll. (siehe [3])
Die Software wurde in BASCOM geschrieben [2]

Programmierung des Prozessors

Zur Programmierung des Prozessors ist ein 6poliger ISP Stecker vorhanden.
Die Fuses müssen möglicherweise programmiert werden (sh Bascom Programm) !! Prozessortyp und Frequenz müssen ggf angepasst werden. Die Blockkondesatoren C14, C15, und C16 sollten erst nach der Programmierung bestückt werden und der Jumper J3 während der Programmierung entfernt werden.

SMD

Die Leiterplatte ist teilweise mit SMD bestückt. Bei den nötigen Bauteilen sind das aber nur relativ großen Bauteile (1206).

Anschlüsse

Ansicht auf die Steckerleiste, von links nach rechts:
X1
12	GND
11	Eingang 1 digital
10	Eingang 2 digital
9	Eingang 3 digital
8	Eingang 4 digital
7	Eingang 5 digital
6	Eingang 6 digital
5	Eingang 7 digital
3	Eingang 8 analog/digital
3	Eingang 9 analog/digital
2	Eingang 10 analog/digital
1	Eingang 11 analog/digital

X2
12	Relais1 Kontakt 1 aktiv 
11	Relais1 Kontakt 1 Mittelanschluss
10	Relais1 Kontakt 1 Ruhe
9	Relais1 Kontakt 2 aktiv 
8	Relais1 Kontakt 2 Mittelanschluss
7	Relais1 Kontakt 2 Ruhe
6	Relais2 Kontakt 1 aktiv 
5	Relais2 Kontakt 1 Mittelanschluss
4	Relais2 Kontakt 1 Ruhe
3	Relais2 Kontakt 2 aktiv 
2	Relais2 Kontakt 2 Mittelanschluss
1	Relais2 Kontakt 2 Ruhe

X2
12	Relais3 Kontakt 1  aktiv
11	Relais3 Kontakt 1 Mittelanschluss
10	Relais3 Kontakt 1 Ruhe
9	Relais3 Kontakt 2  aktiv
8	Relais3 Kontakt 2 Mittelanschluss
7	Relais3 Kontakt 2 Ruhe
6	Relais4 Kontakt 1  aktiv
5	Relais4 Kontakt 1 Mittelanschluss
4	Relais4 Kontakt 1 Ruhe 
3	Relais4 Kontakt 2  aktiv
2	Relais4 Kontakt 2 Mittelanschluss
1	Relais4 Kontakt 2 Ruhe

SL1
1	GND
2	8-12V
3	GND
4	SCL
5	SDA

Während des normalen Betriebs muss der Jumper J3 gesteckt sein.

Versionen

Diese Beschreibung gilt für die
Leiterplattenversion 02.1
Bascom Version 04.0

Copyright

Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Geafahr; es wird keinerlei Garantie übernommen.
The ideas of this document can be used under GPL (Gnu Public License V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Referenzen

1]	dk1ri.de/dhw/relaissteuerung_eagle.zip
[2] 	dk1ri.de/dhw/relaissteuerung_bascom.zip
[3]	dk1ri.de/myc/MYC.pdf 
[4]	dk1ri.de/myc/Description.pdf (englisch)
[5]	dk1ri.de/myc/Definitions.pdf (englisch)
