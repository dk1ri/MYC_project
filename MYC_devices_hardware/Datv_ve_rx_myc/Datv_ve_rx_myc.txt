Hinweis für die Textformat-Version; um diese Version im PDF Format zu lesen, laden Sie bitte http://www.dk1ri.de/dhw/Datv_ve_rx_myc.pdf

DATV RX für das MYC Protokoll
					

Author DK1RI, Version V01.3, 20250331
This project can be found in https://www.github.com/dk1ri

Einleitung

Der DATV Empfänger DATV_VE_RX von Rainer Flössner DL9NBZ wurde in der Zeitschrift cd-DL 2024/12 beschrieben. 
Er verwendet eine Raspberry 4 oder 5  mit einem RTL SDR Stick. Das Image für den Raspberry ist in [1] zu finden. 
Der Empfänger arbeitet als eigenständiges Gerät mit Bedienoberfläche, wenn man einen Bildschirm und eine Tastatur verbindet. Ein Programm setzt Eingaben der Benutzeroberfläche in einen Befehlsstring um, der die gewünschte Empfangsfunktion auslöst.
Ich möchte den Empfänger so umbauen, dass er sich wie ein MYC device verhält, das mit MYC Befehlen gesteuert wird. Die Bedienung erfolgt dann mit (binären) MYC Befehlen, oder mit einem Webserver oder über einen Commandrouter. Die MYC Befehle werden  mit einem Interfaceprogramm in den Befehlsstring umgesetzt.
Anders als mit der originalen Benutzeroberfläche ist auch der Empfang von QO100 Frequenzen direkt möglich. Der LNB muss eine LO Frequenz von 9,75GHz haben. Alle QO100 Frequenzen nach Bandplan sind als Festfrequenzen abrufbar.
 
Beschreibung und Bedienung

Einschränkungen / Hinweise:
Eigentlich soll der Empfänger ferngesteuert werden.
Dazu ist eine Verbindung zum Commandrouter / Webserver nötig.
Diese kann folgendermaßen erfolgen:
über USB: Dazu müsste die USB Schnittstelle des Raspberry als Slave funktionieren. Ich weiß nicht, ob das überhaupt geht.
Ethernet: UDP: ähnlich wie beim ICOM Interface? Test fehlt noch. Der Webserver hat auch noch keine Ethernet Schnittstelle.
Ethernet: mit psexec ? Fehlt noch.

Zunächst möchte ich wissen, ob das Konzept überhaupt funktioniert und dazu installiere ich den Webserver auf dem Raspberry mit Filetransfer der Steuerdaten zum Interfaceprogramm. Ich habe auf die FIFO Funktion von python / PHP verzichtet, da die prinzipiell ähnlich funktioniert.

Vorbereitung
Das Handbuch für den originalen DATV-VE_RX findet man in [1]
Zunächst wird das Image [1] auf den Raspberry installiert. Dazu gibt es viele Anleitungen im Internet.
Man sollte kein update machen: sudo apt-get update sudo apt-get upgrade
Danach hängt der Raspi möglicherweise beim reboot!!
Bei Verwendung des Raspi mit angebauten kleinen touchscreen kann die Anzeige um180 Grad gedreht sein:
Das Anhängen der Zeile display_rotate=2 oder lcd_rotate =2 an die Datei boot/firmware/config.txt funktioniert nicht.
Auch der touchscreen funktioniert bei mir nicht. Wahrscheinlich funktioniert das nur mit raspbian.
Die Anzeige hat auch eine zu geringe Auflösung. Dieser Touchscreen ist daher nur bedingt brauchbar. Ich verwende einen Raspberry4 mit angeschlossenem Fernseher.
Die SD Karte hat sich auch nicht bewährt: es gab immer wieder Ausfälle. Ein langsamer USB Stick geht auch.

Mit angeschlossener SAT Antenne und der RX Frequenz von 741.5MHz und Samplerate = 1500 im Settings Menu sollte die QO100 Bake zu empfangen sein. Bei mir gab es zwar kein Bild, aber mein Sendesignal war bei Direkteinspeisung einwandfrei zu  sehen (gleiche Frequenz, gleiche Samplerate).

Man sollte den Raspbberry nicht durch Abschalten der Stromversorgung ausschalten! Es passiert dann ab und zu, dass man neu installieren muss!
Besser im Terminal:
sudo halt

Installation in einen Terminal am Raspi:

sudo apt-get install firefox
sudo apt-get install apache2

bei einer Fehlermeldung:
sudo apt-get install --fix-missing
sudo apt-get install apache2

dann:
sudo apt-get install php php-mbstring

reboot

Die Dateien  DATV_for_raspberry.zip [2] und htdocs.zip [9] mit firefox (Raspi) laden
dann im Raspi Terminal:
cd /home/pi/Downloads

entpacken:
unzip  DATV_for_raspberry.zip
unzip  htdocs.zip

Interface Programm kopieren:
cp -r DATV_for_raspberry/Datv_ve_rx_myc/*  /home/pi/leansdr/source/apps

Webserver kopieren:
sudo cp -r htdocs/* /var/www/html
sudo mkdir /var/www/html/devices/Datv_ve_rx_myc
sudo cp home/pi/leansdr/source/apps/___announcements /var/www/html/dvices/Datv_ve_rx_myc

Das Startscript sichern und ersetzen:
mv /home/pi/ve-rx.sh /home/pi/ve-rx.org
cp ve-rx.sh /home/pi

sudo chown -R www-data  /var/www/html
sudo chmod -R 775  /var/www/html
sudo chmod -R 777 /var/www/html/usb_interface

Details zur Bedienung:
Nach dem Einschalten muss in dem sich offnenden Terminal 
python Datv_ve_rx_myc.py
eingegeben werden. Warum das Programm nicht automatisch startet, ist nicht klar.

Im Browser muss man 
localhost/myc.php
eingeben.

Es dauert bei mir eine Weile, bis die Programme starten. Es liegt an dem alten (und langsamen USB Stick.

Details zu einem Testmode stehen im Programm.

Die Bedienung mit dem Browser ist weitestgehend selbsterklärend.
Anders als im Originalprogramm sind die Festfrequenzen nicht änderbar.
Beim Start werden die Daten des 28MHz Festfrequenz verwendet.
Beim Aufruf einer Festfrequenz werden die zugehörigen Parameter als aktueller Kanal gespeichert.
Es gibt 6 Kanäle zur Speicherung individueller Kanäle. Man kann den aktuellen Kanal in einen dieser Kanäle übertragen.
Diese Kanäle stehen allen Benutzern zu Verfügung. Mit der Web Benutzeroberfläche kann man zwar benutzerindividuell aktuelle Werte speichern, nicht aber alle Werte der verschiedenen individuellen Kanäle.

Einbindung in das MYC System

Details zum MYC System stehen in [3] [4] [5].
Die komplette Befehlsliste steht als  announcements in der Datei ___announcements im Interfacepogramm.

Fehlermeldungen

Der Befehl &HFC liefert den letzten Fehler im Format:
aktuelle Befehlsnummer - Fehler - Befehlsnummer beim Auftritt des Fehlers
Dazu werden die empfangenen Befehle von 0 bis 255 umlaufend gezählt.
Nach 254 korrekten Befehlen wird der Fehlereintrag gelöscht.
Der Webserver unterstützt zur Zeit noch keine Regeln. Das Programm selbst verhindert Falscheingaben; Die Fehlermeldung kann abgefragt werden.. Mit dem Lesebefehl sieht man, ob geänderte Werte übernommen wurden.

Software

Die Software wurde in Python mir Pycharm geschrieben
Als Basis wurde das Interface Programm für den ICOM IC705 verwendet. Ich habe versucht, die Grundstruktur beizubehalten. Aber da dieses Programm wesentlich weniger Befehle benötigt und die CIV Schnittstelle entfällt, waren einige Vereinfachungen möglich. Die Behandlung der Kommandos ist jetzt eher ähnlich den devices mit Bascom Firmware. Dieses Programm kann als Vorlage für ähnliche Steuerprogramme verwendet werden. 

Browser Schnittstelle

Details zum Webserver stehen in [7].
Ein Bildschirm Bild und nötige Daten für dieses Device stehen in [8].

Versionen

Diese Beschreibung gilt für die Version V01.1


Copyright

Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Geafahr; es wird keinerlei Garantie übernommen.
The ideas of this document can be used under GPL (Gnu Public License V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Referenzen

[1]	https://www.darc.de/der-club/referate/agaf/atv-weblinks
[2]	http://www.dk1ri.de/dhw/DATV_for_raspberry.zip 
[3]	https://www.dk1ri.de/myc/MYC.pdf 
[4]	https://dk1ri.de/myc/Description.txt  oder https://dk1ri.de/myc/Description.pdf (englisch)
[5]	https://dk1ri.de/myc/Definitions .txt  oder https://dk1ri.de/myc/Definitions .pdf (englisch)
[7]	https://dk1ri.de/myc/webserver.pdf oder  https://dk1ri.de/myc/webserver.txt
[8]	https://dk1ri.de/w_dat.htm
[9]	http://www.dk1ri.de/dhw/htdocs.zip 
