Hinweis für die Textformat-Version; um diese Version im PDF Format zu lesen, laden Sie bitte https://www.dk1ri.de/ic7300_interface.pdf

Icom IC7300 Interface für das MYC Protokoll

Author DK1RI, Version V01.0, 20190320
This paper is published in https://github.com/dk1ri  as well.

Vorläufige Version

Zur Zeit gibt es nur die Softwareversion, die unter Windows mit USB Schnittstelle  getestet wurde, aber noch nicht auf Raspberry.
Die Firmware für die Hardwareversion fehlt.

Einleitung

Dies ist die Beschreibung eines Interfaces für dem ICOM Transceiver IC7300 (TM)
Es gibt zwei Versionen:
Software:
Das Programm nimmt die MYC Befehle über die Tastatur oder Ethernet Schnittstelle über Telnet entgegen und gibt die CIV Befehle über den USB Port aus. Der Transceiver wird direkt an die USB Schnittstelle oder über einen USB -> RS232Wandler  ? CIV Pegelwandler an die Remote Buchse angeschlossen.
Hardware:
Das Interface arbeitet als Slave am I2C Bus.
Das Interface kann auch bei entsprechender Bestückung der Leiterplatte Eingaben an der RS232 oder USB Schnittstelle annehmen.
Defaultmäßig sind alle Schnittstellen aktiv. Mit dem Initialisierungsbefehl können diese aber deaktiviert werden. Der Initialisierungsbefehl funktioniert aber immer.
Der Transceiver wird an der Remote Buchse angeschlossen. 

Beschreibung

Das Interface setzt MYC Befehle in das CIV Protokoll um.
Es werden die meisten CIV Befehle des Radios direkt unterstützt. 
Ausnahmen:
Statt Daten bei der Bandstack Funktion zu schreiben, gibt es nur einen Kopierbefehl. Da es aber keine Möglichkeit gibt, diese Daten in den VFO zu kopieren, macht diese Funktion wenig Sinn.
Die Wasserfall Daten konnten nicht gelesen werden, da dazu eine Baudrate von 115200 Baud nötig ist. Dies hat bei mir nicht funktioniert.
Der CIV Befehl 271E ist im wesentlich identisch zu 1a050112 – 1a050150 und wurde weggelassen..
Einige Funktionen sind für remote Betrieb nicht sinnvoll oder lassen sich auch durch eine geeignete Benutzeroberfläche realisieren.  Diese Funktionen wurden aber trotzdem vorgesehen.

Hinweise zur Bedienung

Die Befehle sind meist eine direkte Übersetzung der CIV Befehle. Daraus ergeben sich Einschränkungen bei der Bedienung:
Einige Befehle arbeiten abhängig von den aktuellen Einstellungen: zum Beispiel wirkt die Einstellung des DSP nur auf die aktuelle Betriebsart , zum Beispiel SSB. Das Interface liefert dann als Antwort auf einen operate Befehl eine weitere Info mit den nötigen Einstellungen. Dies ist aber (noch) nicht in allen solchen Fällen realisiert.
Die Beschreibung der CIV Schnittstelle im Hanual ist an einigen Stellen fehlerhaft oder unvollständig und hat einige Ungereimtheiten:
Bei einigen Einstellungen stimmt an den Einstellgrenzen der gelesen Wert nicht mit der Einstellung überein: Zum Beispiel ergibt die Einstellung des NR levels von 0 einen Rückgabewert von 8.
Die USB Schnittstelle der Transceivers lässt sich mit dem Befehl „USB serial Funktion: RTTY“  abschalten, was bei der Softwareversion zur Funktionsunfähigkeit führt.
Die Abfrage der Memory Inhalte liefert einen Fehler, wenn das Memory leer ist.Um die Zahl der Regeln zu reduzieren, werden leere Memories beim Einschalten mit dem Inhalt vorherigen Memory gefüllt. Eine leere erste Speicherstelle erhält einen Defaultwert im 20m Band. 
Ein geänderter Memory Inhalt wird erst übernommen (wenn der Transceiver im Memory mode ist), wenn zweimal V/M gedrückt wird oder der entsprechende CIV Befehl gegeben wird. Das macht das Interface automatisch.
Der Lesebefehl 1e00 liefert 11 Bänder zum senden. Der Befehl 1e01 liefert nur 9 Bänder bis einschließlich 10m.
Der Befehl 1a0057 sollte auf 0 bleiben. Einige Befehle liefern andernfalls eine Info, die aber bisher nicht den richtigen Befehlen zugeordnet wird (wird in eine späteren Version geändert)
Der Befehl 2711 geht nicht
Diese Fehler werden hoffentlich in späteren Firmware Versionen behoben.

Softwareversion:
Zum Betrieb unter Windows muss Python 3.6 installiert werden.
Der Aufruf des Programms erfolgt dann in der Powershell (Die Verzeichnisnamen müssen ggf angepasst werden):
cd c:\Users\xx\Desktop\IC7300
>> C:\Users\xx\AppData\Local\Programs\Python\Python36-32\python.exe Ic7300_interface.py
Bei Betrieb über die USB Schnittstelle muss Menu ? Set ? Connectors ? CI-V ? CI-V USB Port  auf „Unlink from [REMOTE]“ gesetzt werden.
Weiterhin muss Menu ? set ? Connectors ? USB Serial Function auf CI-V stehen.
Diese Einstellung ist per remote nur lesbar.
Als USB Baudrate muss AUTO oder 19200 oder kleiner gewählt werden. Es ist nicht geklärt, warum höhere Baudraten nicht funktionieren
Ändert man das im Betrieb, ist die USB Schnittstelle nicht mehr verwendbar.
Die CIV Adresse sollte auf 0x94 stehen. Bei anderer Adresse muss die Konfigurationsdatei geändert werden.
Bei der Initialisierung wird der VFO Mode eingeschaltet, USB echo abgeschaltet und alle leeren Memoryplätze beschrieben.
Bei Verwendung der Tastatur erfolgt die Befehlseingabe erfolgt mit HEX Zahlen (00 bis ff)

Hardware:
Das Interface unterstützt keine Kollisionserkennung auf dem ICOM Bus. Daher darf nur 1 Radio an den CIV-Bus angeschlossen werden. Während des Remote Betriebs sollten daher auch keine manuellen Einstellungen am Gerät vorgenommen werden. Die CIV Schnittstelle verwendet 19200 Baud 8N1.
Die Befehlseingabe erfolgt binär. Der Wertebereich der Befehlsparameter ist bei den Befehlsbeschreibungen angegeben.

Befehle

Zu Details zum MYC Protokoll und zur Bedienung siehe [3] und [4] (aktuell).
Die Befehlsliste  Ic7300_befehle ist eine Kopie aus dem Bascom / Python Programm.

I2C (Hardwareversion)

Die Default Adresse ist 23 (&H17).
Mit dem Befehl &HFFFE03<n> kann die Adresse in n (1 … 127) geändert werden.
Pullup Widerstände für den I2C Bus (R1/R2) können bei Bedarf bestückt werden. Der Gesamtwiderstand am Bus sollte zwischen 1 und 10 kOhm liegen. 
Mit JP2 kann festgelegt werden, ob der I2C Bus mit 3V oder 5V betrieben wird.
Wenn auf den 3V Betrieb völlig verzichtet werden soll, kann IC3 (PCA9517), R1, R2, R5, R6 entfallen und JP3 und JP4 wird bestückt.
Ganz ohne I2C kann auch X2, X3, R3, R4 entfallen.
Bei anderer I2C Spannung kann R5 / R6 angepasst werden.

Fehlermeldungen

Der Befehl &HFC liefert den letzten Fehler im Format:
aktuelle Befehlsnummer - Fehler - Befehlsnummer beim Auftritt des Fehlers
Dazu werden die empfangenen Befehle von 0 bis 255 umlaufend gezählt.
Nach 254 korrekten Befehlen wird der Fehlereintrag gelöscht.

Reset (Hardwareversion)

Ist der Reset Jumper JP5 beim Anlegen der Versorgungsspannung überbrückt, werden wieder die Defaultwerte eingelesen. Dies ist hilfreich, wenn die aktuelle I2C Adresse verloren gegangen ist.

Watchdog

Die Befehlseingabe und Ausführung muss in weniger als 1 Sekunde beendet sein. Danach werden die bereits empfangenen Daten gelöscht. Dies soll falsche Eingaben vermeiden. Mit dem &HFC "letzten Fehler" Befehl kann man Eingabefehler sehen.
Bei einem Lesebefehl müssen die Daten innerhalb von 10 Sekunden vom I2C Master abgeholt werden – wenn die I2C Schnittstelle gerade verwendet wird. Danach werden die Daten gelöscht. Diese Zeit kann mit dem Wert Tx_factor im Bascom Programm geändert werden. Neue Befehle können erst eingegeben werden, wenn alle  Daten abgeholt wurden. Wird die RS232 / USB Schnittstelle verwendet, werden die Daten sofort ausgegeben.
Es gibt einen kompletten Reset, wenn die Hauptschleife länger als 2 Sekunde dauert, zum Beispiel, wenn die I2C Schnittstelle nicht korrekt arbeitet.

Software

Die Softwareversion wurde mit Pycharm 18.03 entwiclet.
Bei der Hardwareverion übernimmt die Steuerung ein AVR Mikrocontroller Atmega1284
Die Software dazu wurde in BASCOM geschrieben [2]

Programmierung des Prozessors (Hardwareversion)

Zur Programmierung des Prozessors ist ein 6poliger ISP Stecker JP6 vorgesehen.
Die Fuses müssen möglicherweise programmiert werden (siehe Bascom Programm) !! Prozessortyp und Frequenz müssen gegebenenfalls angepasst werden.
Der Jumper J1 sollte während der Programmierung entfernt werden.

Serielle Schnittstelle (Hardwareversion)

Schnittstellenparameter: 19k2 8N1
I2C und seriell / USB können nicht gleichzeitig verwendet. Der Befehlspuffer wird gelöscht, wenn die Schnittstelle gewechselt wird.

USB Schnittstelle (Hardwareversion)

Das Interface kann alternativ zur RS232 Schnittstelle mit der USB Platine UM2102 von ELV bestückt werden. Die USB Platine wird plan auf der Oberseite der Interfaces verlötet: der USB Stecker zeigt zum Rand. Die mittleren 4 pins des Verbinders ST2  sind mit dem 4 Anschlusspunkten JP7 auf dem Interface zu verbinden.USB Platine und Interface müssen voneinander isoliert werden.
Die Stromversorgung erfolgt dann über USB.

SMD (Hardwareversion)

Die Leiterplatte ist teilweise mit SMD bestückt.

Stromversorgung (Hardwareversion)

Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 20mA max. 
Alternativ erfolgt die Stromversorgung über USB

Bestückung der Leiterplatte (Hardwareversion)

Verwendung von ISP:
JP6

I2C Pullups R1 / R2 nach Bedarf,  siehe auch I2C oben.

Mit USB Schnittstelle:
Bei Verwendung des USB Moduls UM2102 wird  X1, D1, IC2, IC4 und C1, C6 - C9 nicht bestückt.

Anschlüsse (Hardwareversion)

Power
Tip	12V
Ring	GND

RS232 (Buchse)

I2C Stereo (2 x 3,5mm Klinke)
Sleeve	GND
Ring	SDA
Tip	SCL

Jumper (Hardwareversion)

JP1 		Power
JP2 		I2C: 3V/5V Umschaltung
JP3		SDA Überbrückung (ohne IC3)
JP4		SCL Überbrückung (ohne IC3)
JP5		Reset
JP6		ISP
JP7		Anschluss für USB Modul

Versionen

Diese Beschreibung gilt für die
Leiterplattenversion V02.0
Bascom Version V01.0
Softwareversion (Python) V01.0

Copyright
Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Gefahr; es wird keinerlei Garantie / Gewährleistung / Produkthaftung  übernommen.
The ideas of this document can be used under GPL (Gnu Public License V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Referenzen

[1]	https://www.dk1ri.de/dhw/ic7300_interface_python.zip
[2]	https://www.dk1ri.de/dhw/MYC_icom_eagle.zip
[3]	https://www.dk1ri.de/myc/MYC.pdf 
[4]	https://dk1ri.de/myc/Description.txt  oder https://dk1ri.de/myc/Description.pdf (englisch)
[5]	https://dk1ri.de/myc/Definitions.txt  oder https://dk1ri.de/myc/Definitions.pdf (englisch)
[5]	https://dk1ri.de/dhw/Ic7300_anouncements.zip
