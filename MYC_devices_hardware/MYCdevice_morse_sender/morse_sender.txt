Hinweis für die Textformat-Version; um diese Version im PDF Format zu lesen, laden Sie bitte http://www.dk1ri.de/dhw/morse_sender.pdf

Morse Sender

Author DK1RI, Version V03.0, 20230421
This project can be found in https://www.github.com/dk1ri also.

Einleitung

Dieses Gerät wandelt Eingabedaten in Morsezeichen.
Dieses Gerät kann in einem MYC System verwendet werden, aber auch unabhängig davon mit (binären) Befehlen gesteuert werden. Die Befehle sind sind als announcements in der Datei announcements.bas im Bascom Programm beschrieben.
Zur Steuerung mit einem Browser: siehe [7].
Das Interface arbeitet als Slave am I2C Bus  oder kann über RS232 /USB gesteuert werden.
Defaultmäßig sind alle Schnittstellen aktiv. Mit dem Initialisierungsbefehl können diese aber deaktiviert werden. Der Initialisierungsbefehl funktioniert aber immer. 
Dieses Interface ist eine Vorlage für ein Interface, das ein Gerät, das sich mit Morse Signalen steuern lässt, in ein MYC System einbindet.

Beschreibung

Es wird die gleiche Leiterplatte wie für das I2C_RS232_Interface verwendet.
Die Eagle Datenstehen unter  [1].
Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 20mA max oder über USB.
Das Programm ist nur das Framework; weitere MYC Befehle zur Steuerung anderer Geräte mit Morsecodes müssen nach Bedarf eingefügt werden. Man kann aber auch Daten direkt eingeben, die dann in Morsesignale weit möglich umgesetzt werden.
Das Interface kann auch als selbstständiger Morsetrainer verwendet werden.
Die Tonhöhe des Morsesignals ist von 100Hz bis 2kHz einstellbar, die Geschwindigkeit von 5 bis 100 Wpm. Diese Werte sind nicht sehr genau.

Es gibt vier Betriebsarten; die Betriebsart bleibt nach dem Ausschalten erhalten:

Direkter Browser mode, default (&H0600)
Die Daten werden im Klartext eingeben.
Bei Verwendung eines Browsers sollte nur dieser Mode und der 5er Gruppen  Mode verwendet werden

MYC_mode (&H0601)
Die Befehlsdaten müssen binär eingegeben werden; er erfolgt keine Wandlung, hier als Beispiel im HEX Format:
010447465737
01 ist der Befehl zur Morse  Ausgabe. 04 ist die Länge des nachfolgenden Strings test
Die Zeichen werden an der seriellen Schnittstelle eingegeben. Werden weitere Befehle eingegeben, bevor alles Zeichen ausgegeben wurden, gehen diese verloren.
Es können 250 Zeichen maximal am Stück übertragen werden; die Länge des Strings wird mit einem Byte übertragen.

Direkt_mode, nicht MYC Mode (&H0602):
Alle erlaubten Morsezeichen werden in Morsezeichen umgesetzt, sobald ein LF (&H0A) empfangen wurde.
Dieser Mode wird durch einen gültigen Befehlscode (&H00 bis &H07, >= &H240 sofort verlassen..

Verschiedene  5er Gruppen (&H0603 bis &H0609):
Es gibt die Möglichkeit, 5er Gruppen mit verschiedenen Zeichensätzen auszugeben
Die Zeichenausgabe wird durch eine beliebige weitere Eingabe beendet.

Einbindung in das MYC System

Details zum MYC System stehen in [3].
Die komplette Befehlsliste steht als  announcements in der Datei announcements.bas im Bascom Programm.

Regeln

Während des Morse_mode = 2 kann nur der Morse_mode geändert werden.

Fehlermeldungen

Der Befehl &HFC liefert den letzten Fehler im Format:
aktuelle Befehlsnummer - Fehler - Befehlsnummer beim Auftritt des Fehlers
Dazu werden die empfangenen Befehle von 0 bis 255 umlaufend gezählt.
Nach 254 korrekten Befehlen wird der Fehlereintrag gelöscht.

Reset

Ist der Reset Jumper JP5 beim Anlegen der Versorgungsspannung überbrückt, werden wieder die Defaultwerte eingelesen. Dies ist hilfreich, wenn die aktuelle I2C Adresse verloren gegangen ist.

Watchdog

Es gibt einen kompletten Hardware-reset, wenn die Hauptschleife länger als 2 Sekunde dauert.
Zusätzlich gibt es drei weitere Watchdogs, die in der vorliegenden Firmware für Tests und „nicht_MYC Betrieb“ nach ca 10 Sekunden ansprechen. Für „MYC Betrieb“ sollte der Wert auf 1 Sekunde gesetzt werden.
Die Befehlseingabe und Ausführung muss in dieser Zeit beendet sein. Danach werden die bereits empfangenen Daten gelöscht. Dies soll falsche Eingaben vermeiden. Mit dem &HFC "letzten Fehler" Befehl kann man Eingabefehler sehen.
Bei einem I2C Lesebefehl müssen die Daten innerhalb dieser Zeit vom I2C Master abgeholt werden. Danach werden die Daten gelöscht. Neue Befehle können erst eingegeben werden, wenn alle  Daten abgeholt wurden oder die Watchdog Zeit abgelaufen ist. Wird die RS232 / USB Schnittstelle verwendet, werden die Daten sofort ausgegeben.
Bei einem I2C BusLock (SDA pin auf 0) erfolgt auch ein kompletter Restart. Das bedeutet, dass bei einem Kurzschluss auf der I2C Leitung das Interface nicht funktioniert!

Software

Die Steuerung übernimmt ein AVR Mikrocontroller Atmega168.
Das aktuelle Bascom Programm verwendet einen Atmega328.
Die Software wurde in BASCOM geschrieben [2]
Um das Programm zu kompilieren, muss das Verzeichnis common_1.10 [6] in das Verzeichnis mit dem Programm kopiert werden

Programmierung des Prozessors

Zur Programmierung des Prozessors ist ein 6poliger ISP Stecker JP6 vorgesehen.
Die Fuses müssen möglicherweise programmiert werden (siehe Bascom Programm) !! Prozessortyp und Frequenz müssen gegebenenfalls angepasst werden.
Der Jumper J1 sollte während der Programmierung entfernt werden.

Serielle (RS232 / USB) Schnittstelle

Schnittstellenparameter: 19k2 8N1
Bei Verwendung der RS232 Schnittstelle muss bei Jumper JP8 und JP9 ist jeweils Pin1 und Pin2 überbrückt werden.
Alternativ zur RS232 Schnittstelle kann die USB Platine UM2102 von ELV verwendet werden. Die USB Platine wird plan auf der Oberseite der Interfaces verlötet: der USB Stecker zeigt zum Rand. Die mittleren 4 pins des Verbinders ST2  sind mit dem 4 Anschlusspunkten JP7 auf dem Interface zu verbinden. USB Platine und Interface müssen voneinander isoliert werden.
Die Stromversorgung erfolgt dann über USB.

I2C Schnittstelle 

Die Default Adresse ist 18 (&H12).
Mit dem Befehl &HFE03<n> kann die Adresse in n (1 … 127) geändert werden.
Pullup Widerstände R3 / R4 müssen immer bestückt werden (1k - 10k).
Mit JP2 kann festgelegt werden, ob der I2C Bus mit 3V oder 5V betrieben wird.
Bei anderer I2C Spannung als 3V kann R5 / R6 angepasst werden.
Wenn auf den 3V Betrieb völlig verzichtet werden soll, kann IC3 (PCA9517), R1, R2, R5, R6, JP2 entfallen und alternativ wird JP3 und JP4 bestückt. 
Ganz ohne I2C kann auch SL1, SL2, JP3, JP4 entfallen. 
Der Gesamtwiderstand am I2C Bus sollte bei 1 bis 10 kOhm je nach Leitungslänge liegen
Mit IC3 muss R1 / R2 (<=10k) bestückt werden.  Wenn auf IC3 verzichtet wird und JP3 / JP4 verwendet wird,, muss berücksichtigt werden, dass R1 / R2 parallel zu R3 / R4 liegt. R1 / R2 kann also gegebenenfalls entfallen. 
SL1 und SL2 sind parallel geschaltet. Ein Anschluss kann zur Weitergabe des I2C Signals an das nächste Gerät verwendet werden. 
Um Buslocks zu vermeiden, wird circa alle 200ms geprüft, ob das SDA Signal auf „0“ liegt.
Ist das 50 mal hintereinander der Fall, wird die I2C Schnittstelle neu gestartet.

Browser Schnittstelle

Es gibt einen (Windows) Webserver, an das Gerät angeschlossen wird. Die Bedienung erfolgt mit einem Browser, der auf den Webserver zugreift.
Details dazu stehen in [7].
Der Browser funktioniert mit allen modes.
Ein Bildschirm Bild und nötige Daten für dieses Device stehen in [8].



Morse  Ausgang

Das Morsesignal kann direkt herausgeführt werden (R15 =0 Ohm, C12 entfällt)  oder über einen Tiefpass (1k/100nF). Das Ausgangssignal ist ein Rechtecksignal und auch nach der Filterung nicht gleichspannungsfrei. Der Pegel im Ruhezustand ist unbestimmt. Ein Koppelkondensator und eine Anpassung des Pegels an den Empfänger wird daher empfohlen.

SMD

Die Leiterplatte ist teilweise mit SMD bestückt.

Stromversorgung

Die Stromversorgung ist 7- 15V, Stromaufnahme ca. 20mA max. 
Alternativ erfolgt die Stromversorgung über USB

Bestückung der Leiterplatte

Da die Leiterplatte RS232_interface auch für andere Anwendungen eingesetzt werden kann, brauchen nur folgende Bauteile  bestückt werden: X1, D1, IC1, IC2, Q1, C1 – C5, C10, JP1(muss für Normalbetrieb überbrückt werden), R3, R4, SL4, ohne Tiefpass: R15=0

Verwendung von ISP:
JP6

Mit I2C:
Siehe I2C oben.

Mit serieller Schnittstelle:
Bei Verwendung der RS232 Schnittstelle wird IC4 und C6 – C9, JP8, JP9 bestückt. Alternativ dazu kann der USB Modul UM2102  verwendet werden. Dann darf auch X1, D1, C1, IC2  nicht bestückt werden!

Anschlüsse

Power
Tip	12V
Ring	GND

RS232 (Buchse)
5	GND
2	Jumper
3	Jumper

I2C (SL1, SL2)
1	GND
2	SCL
3	SDA

Morsesignal (SL4)
1	Morsesignal 
5	GND
Jumper

JP1 		Power
JP2 		I2C: 3V/5V Umschaltung
JP3		SDA Überbrückung (ohne IC3)
JP4		SCL Überbrückung (ohne IC3)
JP5		Reset
JP6		pin1 – 6: ISP, pin10 : SS für den SPI Anschluss 
JP7		Anschluss für USB Modul

Versionen

Diese Beschreibung gilt für die
Leiterplattenversion V05.0
Bascom Version V05.0

Copyright

Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Geafahr; es wird keinerlei Garantie übernommen.
The ideas of this document can be used under GPL (Gnu Public License V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Referenzen

[1]	dk1ri.de/dhw/i2c_rs232_interface_eagle.zip
[2]	dk1ri.de/dhw/morse_sender_bascom.zip
[3]	https://www.dk1ri.de/myc/MYC.pdf
[4]	https://dk1ri.de/myc/Description.txt  oder https://dk1ri.de/myc/Description.pdf (englisch)
[5]	https://dk1ri.de/myc/Definitions .txt  oder https://dk1ri.de/myc/Definitions .pdf (englisch)
[6]	https://dk1ri.de/dhw/common_1.12.zip
[7]	https://dk1ri.de/myc/webserver.pdf oder  https://dk1ri.de/myc/webserver.txt
[8]	https://dk1ri.de/w_dat.htm
