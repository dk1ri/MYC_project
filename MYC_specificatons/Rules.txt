Hinweis für die Textformat-Version; um diese Version im PDF Format zu lesen, laden Sie bitte https://www.dk1ri.de/myc/Rules.pdf

MYC Rules

Author: DK1RI
Version V01.02.04 20250202
This project can be found in https://github.com/dk1ri  also.

Introduction

This paper describes the syntax of rules of the MYC system.
For more details of the MYC system please check the reference.

Definitions and formats

see https://dk1ri.de/myc/Definitions.txt or https://dk1ri.de/myc/Definitions.pdf

Some explanation

Rules announcements start with “R” or “S” or “Q”
“R” rules are valid always, “S” rules are used during configuration only and are not forwarded by the CR. “Q” rules are used for login. The LD do not distinguish between “R” and “S” rules.
Rules are defined by FU and RU.
A “R” / “S” rule may have one of these functions:
        ? Rules will block commands but do not modify them.
        ? All commands can be blocked
        ? If a command has more than one parameter, and not all combinations are allowed, this will be defined by a rule. This cannot be defined by the command announcement.
        ? A rule can restrict a range of numeric parameters used by memory commands.
        ? By default all commands are working always. A rule will show, when a command is blocked under a specific status or condition. 
        ? Usually commands are not executed by change of a status of another device. A rule can initiate this: eg the device can be switched off under special conditions.
	-     A rule cannot use descriptions. It uses transmitted values only (may be changed later)
	
 
These rules are used by the LD, which have the status for switch, range and array memory commands of the system at any time and know all “R” and “S” rules and block / initiate commands accordingly. The LD has no knowledge of the content the memories of the devices ( of “om”, “am”, “of, “af” commands); so rules cannot have the content of memories as a condition for blocking any command.
The “oo”command has a temporary effect on a device only, So the status is not stored for the command There nay be a rule with a condition of this command to initiate another command.
“oa” and “aa” commands have a limited number of memory and the status can be used as condition. 
“ob” and “ab” in rules are not supported now (may be later).
For answer commands with corresponding operating commands the token of the answer command or the operate command can be used for the right side. The LD should have the same status.
If different commands work for the same function of a device (one “op”command changing the location and another changing the speed) the actual status of the LD may be wrong after the command. In these cases a rule, that create a read command, may help.

The SK should observe rules given for a device. This avoids sending not valid commands. The LD nevertheless will check this.

Some limitation for the SK within a command should be described within the announcement of that command by <des>. The LD do not use <des>, it uses transmitted values only.

A FU will have rule announcements to inform about dependencies, which exist between the commands and status within the FU.

If there are dependencies between different devices,  a special rules-device RU will provide these rules.

The syntax of the rules should be very simple. Lines are readable, because they must be easily programmed as a part of the announcements of FUs.

All “R” rules are always handled by the LD in the sequence it get the rules, starting with rules of FU.

General Rules behavior

“R” , “S” rules
Each rule is one announcement line (for FU) or an (MYC string) answer or info of an  “an” command (for RU).
By default all commands are working. If a command should be blocked, there must be a rule. The rule is R;!<c> …
Re-enabling is done by R;!!<c> … 
If a command should be generated by the LD under some conditions, use R;<c> … Example is a reset under some conditions. The command will be executed on time only.
If a command should be executed after another use R;<c> AFTER .... Example is a webserver, where a loading command is necessary to read a page. This rule should follow directly the originating rule. Condition testing is only at that time and executing one time only.
All rules use transmitted values (not real values by <des>). The LD do not know descriptions.
All rules are regarded for any command transferred in the sequence: FU rules first, then rules from RU.

"Q"-rules
“Q” rules are produced by the RU only and sent to the CR only and are not forwarded. They are used by the CR only, because the CR knows the interface of the user. They are used for user management.
As default the command-router allow all commands on all interfaces. The CR can block or allow commands, if necessary, for a specific user who logged in.
"Q"-rules are the answer of a login request and describe the command-token to be used and not used.
Format:
Q;<username>;[!]<c>[ TO <c>] [<c>….]
A basic command-token only means all token of the device.
One Q rule per user; but * as username means all users.
A !* as commandtoken means all commands are forbidden (default is: all allowed) 
Syntax is similar to "R" rules.

special rules:
Q;d <n> <n>..		delete rules, sent by RU; * for all. This is an abbreviation, if many empty rules 
			must be sent. The memory elements must be empty.
Q;* !*			send at startup as first rule: login required for all. 
			Default is, that all commands are allowed for all
Q;* *			allow all users all commands (default) 

Rules syntax

<left side> IF|UNLESS|AFTR <right side>		for “R” “S” rules
<left side>					 	for “Q” rules

left side:
![!]$<c> ...						<c> is dropped or re-enabled
<valid command_string>				The command will be sent

right side:
For switches, range and array memory commands this describes the status necessary for blocking.

[!]$<c>[&<p>] [<compare operator> <n>|<s>] ... 
[!]$<c>[&<p>] [<compare operator> <n> TO <n>] ...

Reserved characters / words

R;|S;|Q;		start of rule line
space			separator

left side:
$			command following
!			not active (block)
!!			active again (unblock)
!$*			block all commands, allowed only one time for a device
!!$*			if !$* is used, !!$* must follow (at the end of the rules of the device at least)
			to avoid blocking for the next device.
valid command	in hex, send this command under condition of right side

IF|UNLESS|AFTER	separate left side and right side

right side:
$			command following
&			Parameter following
( )			bracketing
AND OR		logic operator
<  >			relational operator
=			equal
!			negation,
TO
+ - * /			arithmetic operator		
n			value
s			string

Examples

R;!$2 IF $5 = 0		means: Command 2 will not work if status of command 5 is 0

R;!$4 UNLESS $7 = 3500000 TO 3799999 OR $7 = 7000000 TO 7199999
				means: Command 4 will work only unless state 7 is in the range 						of .............

R;!$2 IF $2&1 + $2&2 > 100
				The sum of (real) parameter 1 and 2 must not exceed the maximum
				value

Q;!* 1 30TO50		commands 1 and 30 to 50 forbidden for all
Q;* 0TO100 !500TO550	0 to 100 allowed, 500 to 550 forbidden for all

Copyright

Dieses Dokument darf unverändert kopiert werden.
Die Ideen in diesem Dokument unterliegen der GPL (Gnu Public Licence,V2) soweit keine früheren, anderen Rechte betroffen sind.
Die Verwendung der Unterlagen erfolgt auf eigene Gefahr; es wird keinerlei Garantie übernommen.
This document can be copied without changes.
The ideas of this document can be used under GPL (Gnu Public License, V2) as long as no earlier other rights are affected.
The usage of this document is on own risk, there is no warranty.

Reference

[1]	https://dk1ri.de/myc/MYC.pdf  (german)
[2]	https://dk1ri.de/myc/MYC.en.pdf
[3]	https://dk1ri.de/myc/Description.txt or https://dk1ri.de/myc/Description.pdf
[4]	https://dk1ri.de/myc/commands.txt or https://dk1ri.de/myc/commands.pdf
[5]	https://dk1ri.de/myc/Reserved_tokens.txt or https://dk1ri.de/myc/Reserved_tokens.pdf
[6]	https://dk1ri.de/myc/Rules.txt or https://dk1ri.de/myc/Rules.pdf
[7]	https://dk1ri.de/myc/commandrouter.txt or https://dk1ri.de/myc/commandrouter.pdf
[8]	https://dk1ri.de/myc/Rules_device.txt or https://dk1ri.de/myc/Rules_device.pdf
[9]	https://dk1ri.de/myc/skin.txt or https://dk1ri.de/myc/skin.pdf
[10]	https://dk1ri.de/myc/logicdevice.txt or https://dk1ri.de/myc/logicdevice.pdf
[11]	https://dk1ri.de/myc/Definitions.txt or https://dk1ri.de/myc/Definitions.pdf
[12]	https://dk1ri.de/myc/spec_version.txt or https://dk1ri.de/myc/spec_version.pdf
[13]	https://dk1ri.de/myc/webserver.txt or https://dk1ri.de/myc/webserver.pdf
[14]	https://dk1ri.de/myc/ki.txt or https://dk1ri.de/myc/ki.pdf
[15]	https://dk1ri.de/myc/communication.txt or https://dk1ri.de/myc/communication.pdf
[16]	https://dk1ri.de/myc/Security.txt or https://dk1ri.de/myc/Security.pdf
